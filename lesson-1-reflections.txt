How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It will become easier finding a bug when we have a previous, working version of the file to compare to.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It will help me stress less about making small mistakes like typos etc. and also give me an "UNDO" button to use wewhenever required.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Doing it manually gives you more control over the versions which you want to save but is prone to human neglegence, whereas using Google docs is more easier but creates a lot of redundant content.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git is a manual version control system. It requires the user to commit or not. Thus comitting once should save all files at once. Whereas while using Automatic VCS this should be vice-versa.

How can you use the commands git log and git diff to view the history of files?

    git log as it is will give the history of all the commits on a repo and git diff id1 id2 will give difference between two commits selected by their ids.

How might using version control make you more confident to make changes that
could break something?

    It makes me a lot more confidence as some pesky typos and bugs can be easily undoed and so on.

Now that you have your workspace set up, what do you want to try using Git for?

    Android Development and also for Web Development.
